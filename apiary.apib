FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Brink API

These are the API endpoints that we will feed data into from the Brink Airships. Initially, these will be loaded in after flights.

## Throttling

Since there is going to be a lot of data being transferred, we want to throttle the API calls. We could potential charge for a 'Pro' version for more calls. For now let's do this:

* 1 API call per second  
* 10,000 API calls per day (about three hours of API calls at one per second)

## Users [/v1/users]

### Create New User [PUT]

+ Request (application/json)
    
    + Attributes
        + first_name: `Walter` (required, string) - User's first name
        + last_name: `White` (required, string) - User's last name
        + email: `saymyname@savewalterwhite.com` (required, string) - User's email 
        + username: `wwhite` (required, string) - Username
        + password: `3kj;15j3` (required, string) - Password

+ Response 201 (application/json)

    + Body

        {
          "jwt_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZGVudGl0eSI6MSwiaWF0IjoxNTA0MDIyOTE2LCJuYmYiOjE1MDQwMjI5MTYsImV4cCI6MTUzNTU1ODkxNn0.WImjOljfCc9yh3z4I8vcBIwsftKxWsjLsnEj704A9GY", 
          "response_id": 1, 
          "success": "User created."
        }
        
### Get User [GET /v1/users/{user_id}]

+ Response 200 (application/json)

    + Body

        {
          "id": 1, 
          "first_name": "Walter", 
          "last_name": "White", 
          "username": "wwhite",
          "email": "saymyname@savewalterwhite.com", 
          "created": "Tue, 29 Aug 2017 16:08:36 GMT", 
          "modified": "Tue, 29 Aug 2017 16:08:36 GMT"
        }

## Flights [/v1/flights/{flight_id}]

### Get All Flights [GET]

+ Response 200 (application/json)

        [
            "9":{
                "flightTime":12345,
                "duration":32221,
                "startCoordinateX":12.1432,
                "startCoordinateY":112.2534,
                "endCoordinateX":123.124,
                "endCoordinateY":12.352,
                "maxAltitude":124,
                "minTemperature":12,
                "maxTemperature":65,
            },
            "11":{
                "flightTime":12345,
                "duration":32221,
                "startCoordinateX":12.1432,
                "startCoordinateY":112.2534,
                "endCoordinateX":123.124,
                "endCoordinateY":12.352,
                "maxAltitude":124,
                "minTemperature":12,
                "maxTemperature":65,
            }
        ]

### Get Single Flight [GET]

+ Parameters
    + flight_id (number) - ID of the flight in the form of an integer

+ Response 200 (application/json)

        {
                "flightTime":12345,
                "duration":32221,
                "startCoordinateX":12.1432,
                "startCoordinateY":112.2534,
                "endCoordinateX":123.124,
                "endCoordinateY":12.352,
                "maxAltitude":124,
                "minTemperature":12,
                "maxTemperature":65,
        }

### Create a New Flight [POST]

+ Response 201 (application/json)

    + Body

            {
                "response":"success",
                "message":"Flight created.",
                "id":9
            }
            
## Flight Data [/v1/flights/{flight_id}/data{?postsPerPage,page}]

+ Parameters
    + flight_id (number) - ID of the flight in the form of an integer

### Get Data for Flight [GET]

+ Parameters
    + postsPerPage (optional) - Number of records returned per page. Maximum 250.
    + page (optional) - Page of results to return.

+ Response 200 (application/json)

    + Body

        {
            "213412355": {
                "altitude": 1234,
                "barometricPressure": 1234143,
                "coordinateX": 23.234,
                "coordinateY": 23.2352,
                "temperature": 23
            },
            "213412360": {
                "altitude": 1240,
                "barometricPressure": 1234943,
                "coordinateX": 26.234,
                "coordinateY": 24.2352,
                "temperature": 20
            },
            "nextPage": 2
        }

### Create New Flight Data Record [POST]

+ Request (application/json)

    + Attributes
        + timestamp: 1503873412 (required, number) - UNIX timestamp
        + altitude: 1234 (required, number) - Altitude in meters
        + barometricPressure: 1234143 (required, number) - Barometric pressure in (not sure what barometric is measured in?)
        + coordinateX: 23.234 (required, number) - Current GPS X coordinate
        + coordinateY: 60.234 (required, number) - Current GPS Y coordinate
        + temperature: 31 (required, number) - Current temperature in Celsius

+ Response 201 (application/json)

    + Body

        {
            "response":"success",
            "message":"Flight data created."
        }

